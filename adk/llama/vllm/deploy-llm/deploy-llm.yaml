apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-llama3-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama3-server
  template:
    metadata:
      labels:
        app: llama3-server
        ai.gke.io/model: llama3-3-1b-it
        ai.gke.io/inference-server: vllm
        examples.ai.gke.io/source: user-guide
    spec:
      containers:
      - name: inference-server
        image: vllm/vllm-openai:latest
        resources:
          requests:
            cpu: "2"
            memory: "10Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "2"
            memory: "10Gi"
            nvidia.com/gpu: "1"
        command: ["python3", "-m", "vllm.entrypoints.openai.api_server"]
        args:
        - --model=$(MODEL_ID)
        - --tensor-parallel-size=1
        - --host=0.0.0.0
        - --port=8000
        - --enable-auto-tool-choice
        - --tool-call-parser=llama3_json
        - --chat-template=/templates/tool_chat_template_llama3.1_json.jinja
        - --trust-remote-code # new arguments
        - --enable-chunked-prefill
        - --max-model-len=32768
        env:
        - name: MODEL_ID
          value: meta-llama/Llama-3.1-8B-Instruct
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret
              key: token
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /templates
          name: templates
      volumes:
      - name: templates
        configMap:
          name: llm-templates
      - name: dshm
        emptyDir:
            medium: Memory
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-llama3-service
spec:
  selector:
    app: llama3-server
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
